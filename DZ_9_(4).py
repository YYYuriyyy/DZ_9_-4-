                                     ## Завдання 1
## Напишіть програму, яка запитує у користувача ім'я та вік.
## Після отримання даних програма повинна виводити привітання у форматі: "Привіт, {ім'я}! Твій вік — {вік}".
## Обробіть виняток, що виникає при введенні некоректного віку
## (вік < 0 або вік > 130), і виведіть повідомлення про помилку

# while True:
#     try:
#         name = input("Введіть ваше імя: ")
#         age = int(input("Введіть ваш вік: "))
#         if age < 0 or age > 130:
#             raise ValueError("Некоректний вік ")
#         break
#     except ValueError:
#         print("Введено некоректний вік ")
#
# print(f"Привіт, {name}! Твій вік {age}")

                                ## Завдання 2
## Реалізуйте перше завдання через функцію.
## Функція повинна приймати ім'я і вік як параметри і повертати відформатований рядок.
## Перевірка коректності отриманих даних повинна бути всередині функції. Створіть дві версії реалізації функції:

## Перша версія не обробляє виняток всередині функції. Уся обробка знаходиться зовні;
## Друга версія обробляє виняток усередині функції

# #Перша версія
# def format_name_age(name, age):
#     if not isinstance(name, str):
#         return "Ім'я повинно бути рядком"
#     if not isinstance(age, int):
#         return "Вік повинен бути цілим числом"
#     if age < 0:
#         return "Вік повинен бути додатнім числом"
#
#     return f"Ім'я: {name}, Вік: {age}"
#
#
# name = input("Введіть ваше ім'я: ")
# age = input("Введіть ваш вік: ")
# try:
#     age = int(age)
#     result = format_name_age(name, age)
#     print(result)
# except ValueError:
#     print("Вік повинен бути числом")
#
# #Друга версія
#
# def format_name_age(name, age):
#     try:
#         age = int(age)
#     except ValueError:
#         return "Вік повинен бути числом"
#
#     if not isinstance(name, str):
#         return "Ім'я повинно бути рядком"
#     if not isinstance(age, int):
#         return "Вік повинен бути цілим числом"
#     if age < 0:
#         return "Вік повинен бути додатнім числом"
#
#     return f"Ім'я: {name}, Вік: {age}"
#
#
# name = input("Введіть ваше ім'я: ")
# age = input("Введіть ваш вік: ")
#
# result = format_name_age(name, age)
# print(result)

                                  ## Завдання 3
## Напишіть програму, яка дозволяє користувачеві ввести з клавіатури набір додатних (число більше нуля) чисел.
## Числа необхідно накопичувати у списку. Після отримання всіх значень програма повинна проаналізувати дані.
## У разі виявлення від'ємного значення програма має згенерувати виняток.
## Якщо всі значення у списку позитивні,програма має повернути на екран суму всіх чисел списку.
## Згенерований виняток має бути оброблений кодом програми

# numbers = []
#
# while True:
#     try:
#         num = int(input("Введіть додатнє число (або введіть 0, щоб завершити ввід): "))
#         if num < 0:
#             raise ValueError("Введено від'ємне число!")
#         elif num == 0:
#             break
#         else:
#             numbers.append(num)
#     except ValueError as e:
#         print(e)
#
# if len(numbers) > 0:
#     total = sum(numbers)
#     print("Сума всіх чисел:", total)
# else:
#     print("Список чисел порожній.")


                                    ## Завдання 4
## Реалізуйте третє завдання через функцію.
## Функція повинна приймати список як аргумент і повертати суму елементів списку.
## Перевірка коректності отриманих даних повинна бути всередині функції.
## Створіть дві версії реалізації функції

## Версія № 1
# def sum_of_list(lst):
#     return sum(lst)
#
# try:
#     lst = [10, 20, 3, 4, 7]
#     result = sum_of_list(lst)
#     print(f"Сума елементів у списку дорівнює: {result}")
# except TypeError:
#     print("Надано недійсний список.")

## Версія № 2
# def sum_of_list(lst):
#     try:
#         return sum(lst)
#     except TypeError:
#         raise ValueError("Надано недійсний список.")
#
# try:
#     lst = [10, 20, 30, 4, 5]
#     result = sum_of_list(lst)
#     print(f"Сума елементів у списку дорівнює: {result}")
# except ValueError as e:
#     print(e)